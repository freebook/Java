<?xml version="1.0" encoding="UTF-8"?>
<chapter id="java">
	<title>Java</title>
	&chapter.jvm.xml;
<section id="system">
	<title>System</title>
	<para>如果你希望修改这个系统属性的话，你可以使用-D这个参数，例如 java -Djava.io.tmpdir=/path/to/tmpdir</para>
	<section id="System">
		<title>user.dir</title>
		<programlisting>
		<![CDATA[
public class Test {

	public static void main(String[] args) {
		System.out.println("Working Directory = " + System.getProperty("user.dir"));
	}
}
		]]>
		</programlisting>
	</section>
	<section>
		<title>java.io.tmpdir</title>
		<para>改变java.io.tmpdir的默认值</para>
		<programlisting>
System.setProperty("java.io.tmpdir", "/vat/tmp");
System.out.println(System.getProperty("java.io.tmpdir"));
		</programlisting>
	</section>
</section>

	<section id="Runtime">
		<title>exec 运行shell</title>
		<screen>
exec(String[] cmdarray, String[] envp, File dir)
Executes the specified command and arguments in a separate process with the specified environment and working directory.

那个dir就是调用的程序的工作目录，这句其实还是很有用的。

Windows下调用程序
Process proc =Runtime.getRuntime().exec("file.exe");

Linux下调用程序就要改成下面的格式
Process proc =Runtime.getRuntime().exec("./file");

Windows下调用系统命令
String [] cmd={"cmd","/C","copy file1.txt file2.txt"};
Process proc =Runtime.getRuntime().exec(cmd);

Linux下调用系统命令就要改成下面的格式
String [] cmd={"/bin/sh","-c","ln -s file1 file2"};
Process proc =Runtime.getRuntime().exec(cmd);

Windows下调用系统命令并弹出命令行窗口
String [] cmd={"cmd","/C","start copy file1.txt file2.txt"};
Process proc =Runtime.getRuntime().exec(cmd);

Linux下调用系统命令并弹出终端窗口就要改成下面的格式
String [] cmd={"/bin/sh","-c","xterm -e ln -s file1 file2"};
Process proc =Runtime.getRuntime().exec(cmd);

还有要设置调用程序的工作目录就要
Process proc =Runtime.getRuntime().exec("ls",null, new File("/bin"));
		</screen>
	</section>
	&chapter.java.type.xml;
	&chapter.java.net.xml;
	&chapter.java.sql.xml;
	&chapter.java.util.xml;
	&chapter.java.reflect.xml;
</chapter>
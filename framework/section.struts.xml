<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="struts" ?>
	<title>Apache Struts</title>
	<para><ulink url="http://struts.apache.org/" /></para>
	<para>You can checkout all the example applications from the Struts 2 GitHub repository at https://github.com/apache/struts-examples.</para>
	<section id="struts.xml">
		<title>struts.xml</title>
		<para>web.xml</para>
		<programlisting>
		<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>helloworld</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>		
		]]>
		</programlisting>
		<section>
			<title>include</title>
			<programlisting>
			<![CDATA[
	<include file="/cn/netkiller/struts/ajax.xml" />
	<include file="/cn/netkiller/struts/admin.xml" />	
	<include file="/cn/netkiller/struts/logs.xml" />		
			]]>
			</programlisting>
		</section>
	</section>

<section id="tags">
	<title>Struts Tags</title>
	<para>使用Struts Tags 需要在jsp页面中加入下面一行。</para>
	<programlisting>
	<![CDATA[
<%@ taglib prefix="s" uri="/struts-tags" %>
	]]>
	</programlisting>
	<section id="property">
		<title>property</title>
		<programlisting>
		<![CDATA[
<%@ taglib prefix="s" uri="/struts-tags" %>
 
<html>
<head>
    <title>Hello</title>
</head>
<body>
 
Hello, <s:property value="name"/>
 
</body>
</html>	
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[
<s:property value="messageStore.message" />
<s:property value="#session.user.username" />

<s:bean name="cn.netkiller.Person" var="personBean" />
<s:property value="#personBean.name" />
		]]>
		</programlisting>	
	</section>
	<section id="set">
		<title>set</title>
		<programlisting>
		<![CDATA[
<s:set var="personName" value="person.name"/>
Hello, <s:property value="#personName"/>
 
<s:set var="janesName">Jane Doe</s:set>
<s:property value="#janesName"/>
		]]>
		</programlisting>
		<para>禁止HTML转义，如果你的字符串中含有<![CDATA[&, <, >]]> 等字符输出就会出现 <![CDATA[&amp;, &lt;, &gt;]]> escapeHtml="false" 可以禁止这样的转义，原样输出。</para>
		<programlisting>
		<![CDATA[
<s:property value="url" escapeHtml="false"/>		
		]]>
		</programlisting>
		<para>https://struts.apache.org/docs/property.html</para>
		<programlisting>
Name	Required	Default	Evaluated	Type	Description
default	false		false	String	The default value to be used if value attribute is null
escapeCsv	false	false	false	Boolean	Whether to escape CSV (useful to escape a value for a column)
escapeHtml	false	true	false	Boolean	Whether to escape HTML
escapeJavaScript	false	false	false	Boolean	Whether to escape Javascript
escapeXml	false	false	false	Boolean	Whether to escape XML		
		</programlisting>
	</section>
	<section id="url">
		<title>url</title>
		<programlisting>
		<![CDATA[
<p><a href="<s:url action='hello'/>">Hello World</a></p>

<s:url action="hello" var="helloLink">
  <s:param name="userName">Bruce Phillips</s:param>
</s:url>
 
<p><a href="${helloLink}">Hello Bruce Phillips</a></p>

		]]>
		</programlisting>						
	</section>
	<section id="include">
		<title>s:include</title>
		<programlisting>
		<![CDATA[
<s:include value="/pages/example.jsp"></s:include>			
		]]>
		</programlisting>
	</section>
	<section id="action">
		<title>s:action</title>
		<programlisting>
		<![CDATA[
<%@ taglib prefix="s" uri="/struts-tags" %>
<s:action name="index" namespace="/news" executeResult="true" />
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[
<s:action name="index" namespace="/member" executeResult="true">
	<s:param name="name">Neo</s:param>
</s:action>
		]]>
		</programlisting>
	</section>
	<section id="form">
		<title>HTML Form</title>
		<section>
			<title>form</title>
			<programlisting>
			<![CDATA[
<p>Get your own personal hello by filling out and submitting this form.</p>
 
<s:form action="hello">
 
  <s:textfield name="userName" label="Your name" />
     
   <s:submit value="Submit" />
 
</s:form>
			]]>
			</programlisting>	
		</section>		
		
		<section id="s:textfield">
			<title>textfield</title>
			<programlisting>
			<![CDATA[
<s:textfield name="variable"/>			
			]]>
			</programlisting>
		</section>
		
		<section id="s:hidden">
			<title>s:hidden</title>
			<para>隐藏表单</para>
			<programlisting>
			<![CDATA[
<s:hidden id="unique" name="form.unique" value=""/>			
			]]>
			</programlisting>
		</section>		
			
		<section id="select">
			<title>select</title>
			<programlisting>
			<![CDATA[
<s:select name="city" list="{'Beijing','Shanghai','Guangdong','Shenzhen'}" theme="simple" headerKey="Shenzhen" headerValue="Shenzhen"></s:select>
			
<select name="city" id="searchCriteriaForm_city">
    <option value="Shenzhen">Shenzhen</option>
    <option value="Beijing">Beijing</option>
    <option value="Shanghai">Shanghai</option>
    <option value="Guangdong">Guangdong</option>
    <option value="Shenzhen">Shenzhen</option>
</select>
			]]>
			</programlisting>	
			
			<programlisting>
			<![CDATA[
<s:select name="city" id="city" list="#{1:'Beijing',2:'Shanghai',3:'Guangdong',4:'Shenzhen'}"  label="city" listKey="key" listValue="value"  headerKey="4" headerValue="Shenzhen" />

<select name="city" id="city">
    <option value="4">Shenzhen</option>
    <option value="1">Beijing</option>
    <option value="2">Shanghai</option>
    <option value="3">Guangdong</option>
    <option value="4">Shenzhen</option>
</select>
			]]>
			</programlisting>
			
		</section>
	</section>

	<section id="iterator">
		<title>iterator</title>
		<programlisting>
		<![CDATA[
<s:iterator value="people">
	<s:property value="lastName"/>, <s:property value="firstName"/>
</s:iterator>
		]]>
		</programlisting>	
	</section>
	<section id="if">
		<title>if elseif else</title>
		<programlisting>
		<![CDATA[
<s:if test="%{false}">
    <div>Will Not Be Executed</div>
</s:if>
<s:elseif test="%{true}">
    <div>Will Be Executed</div>
</s:elseif>
<s:else>
    <div>Will Not Be Executed</div>
</s:else>		
		]]>
		</programlisting>
	</section>
</section>
	
	<section id="action">
		<title>Action</title>
		<para>struts.xml</para>
		<programlisting>
		<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>

	<constant name="struts.devMode" value="true" />

	<package name="basicstruts2" extends="struts-default">
		<action name="index">
			<result>/index.jsp</result>
		</action>

		<action name="hello"
			class="org.apache.struts.helloworld.action.HelloWorldAction" method="execute">
			<result name="success">/HelloWorld.jsp</result>
		</action>

		<action name="register" class="org.apache.struts.register.action.Register"
			method="execute">
			<result name="success">/thankyou.jsp</result>
			<result name="input">/register.jsp</result>
		</action>

	</package>
</struts>
		]]>
		</programlisting>
		
		
		<section id="redirect">
			<title>redirect</title>
			<programlisting>
			<![CDATA[
<action name="hello" 
   class="com.tutorialspoint.struts2.HelloWorldAction"
   method="execute">
   <result name="success" type="redirect">
       <param name="location">
         /NewWorld.jsp
      </param >
   </result>
</action>
			]]>
			</programlisting>	
		</section>
		<section id="redirectAction">
			<title>redirectAction</title>
			<programlisting>
			<![CDATA[
<package name="public" extends="struts-default">
    <action name="login" class="...">
        <!-- Redirect to another namespace -->
        <result type="redirectAction">
            <param name="actionName">dashboard</param>
            <param name="namespace">/secure</param>
        </result>
    </action>
</package>
 
<package name="secure" extends="struts-default" namespace="/secure">
    <-- Redirect to an action in the same namespace -->
    <action name="dashboard" class="...">
        <result>dashboard.jsp</result>
        <result name="error" type="redirectAction">error</result>
    </action>
 
    <action name="error" class="...">
        <result>error.jsp</result>
    </action>
</package>
 
<package name="passingRequestParameters" extends="struts-default" namespace="/passingRequestParameters">
   <!-- Pass parameters (reportType, width and height) -->
   <!--
   The redirectAction url generated will be :
   /genReport/generateReport.action?reportType=pie&amp;width=100&amp;height=100#summary
   -->
   <action name="gatherReportInfo" class="...">
      <result name="showReportResult" type="redirectAction">
         <param name="actionName">generateReport</param>
         <param name="namespace">/genReport</param>
         <param name="reportType">pie</param>
         <param name="width">100</param>
         <param name="height">100</param>
         <param name="empty"></param>
         <param name="suppressEmptyParameters">true</param>
         <param name="anchor">summary</param>
      </result>
   </action>
   
   <action name="Auth" class="cn.netkiller.api.action.Auth">
		<result name="credit" type="redirectAction">
			<param name="actionName">history</param>
			<param name="namespace">/api/report</param>
			<param name="LoginName">${LoginName}</param>
			<param name="Direction">${Direction}</param>
			<param name="StartDate">${StartDate}</param>
			<param name="EndDate">${EndDate}</param>
		</result>
	</action>
   
</package>
			]]>
			</programlisting>	
		</section>
		<section id="interceptor-ref-json">
			<title>JSON</title>
			<para>JSON 拦截器</para>
			<programlisting>
			<![CDATA[
	<action name="withdraw" class="cn.netkiller.api.action.Report" method="getHistory">
		<interceptor-ref name="defaultStack" />
		<interceptor-ref name="json">
			<param name="enableSMD">true</param>
		</interceptor-ref>
		<result name="success" type="json">
			<param name="enableGZIP">true</param>
			<param name="excludeProperties">.*direction</param>
		</result>
	</action>
			]]>
			</programlisting>
			<section>
				<title>enableGZIP 压缩传输</title>
				<programlisting>
				<![CDATA[
		<result name="success" type="json">
			<param name="enableGZIP">true</param>
		</result>
				]]>
				</programlisting>
			</section>
			<section>
				<title>excludeProperties 排除 Properties</title>
				<programlisting>
				<![CDATA[
		<result name="success" type="json">
			<param name="excludeProperties">.*direction</param>
		</result>
				]]>
				</programlisting>
			</section>
			<section>
				<title></title>
				<programlisting>
				<![CDATA[
				]]>
				</programlisting>
			</section>
		</section>
		<section id="timestamp">
			<title>传递 Timestamp 变量</title>
			<para>Struts 从URL传递 Timestamp 类型的变量 StartDate</para>
			<programlisting>
			<![CDATA[
http://www.netkiller.cn/api/report/history.do?LoginName=888666&StartDate=2016-01-01&EndDate=2016-02-29
			]]>
			</programlisting>
			<para>解决方法 参考 setStartDate / setEndDate 两个方法，以字符串方式传入，然后转换为Timestamp类型</para>
			<programlisting>
			<![CDATA[
package cn.netkiller.api.action;

import java.sql.Timestamp;
import java.util.Calendar;
import org.apache.struts2.json.annotations.JSON;
import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionSupport;
			
public class Report extends ActionSupport {
	private static final long serialVersionUID = 6484202866632836225L;

	private String loginName;
	private Timestamp startDate = null;
	private Timestamp endDate = null;

	public Report() {

	}

	public String execute() {
		return Action.SUCCESS;
	}

	public String getLoginName() {
		return loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	public Timestamp getStartDate() {
		return startDate;
	}

	public void setStartDate(String startDate) {
		this.startDate = Timestamp.valueOf(startDate + " 00:00:00");
	}

	public Timestamp getEndDate() {
		return endDate;
	}

	public void setEndDate(String endDate) {
		this.endDate = Timestamp.valueOf(endDate + " 00:00:00");
	}
	
}
			]]>
			</programlisting>
		</section>
	</section>
	<section id="ajax">
		<title>Ajax + JSON</title>
		<para>struts.xml 中加入</para>
		<programlisting>
		<![CDATA[
		<action name="Captcha" class="com.example.action.ajax.Captcha">
			<result name="success" type="json"></result>
		</action>
		]]>
		</programlisting>
		<para>Java 文件</para>
		<programlisting>
		<![CDATA[
package com.example.action.ajax;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionSupport;

public class Captcha extends ActionSupport {
	private static final long serialVersionUID = 7284583098398030297L;

	private String string1 = "A";
	private String[] stringarray1 = {"A1","B1"};
	private int number1 = 123456789;
	private int[] numberarray1 = {1,2,3,4,5,6,7,8,9};
	private List<String> lists = new ArrayList<String>();
	private Map<String, String> maps = new HashMap<String, String>();
	
	//no getter method, will not include in the JSON

	public Captcha(){
		lists.add("list1");
		lists.add("list2");
		lists.add("list3");
		lists.add("list4");
		lists.add("list5");
		
		maps.put("key1", "value1");
		maps.put("key2", "value2");
		maps.put("key3", "value3");
		maps.put("key4", "value4");
		maps.put("key5", "value5");
	}

	public String execute() {
               return Action.SUCCESS;
        }
	
	public String getString1() {
		return string1;
	}

	public void setString1(String string1) {
		this.string1 = string1;
	}

	public String[] getStringarray1() {
		return stringarray1;
	}

	public void setStringarray1(String[] stringarray1) {
		this.stringarray1 = stringarray1;
	}

	public int getNumber1() {
		return number1;
	}

	public void setNumber1(int number1) {
		this.number1 = number1;
	}

	public int[] getNumberarray1() {
		return numberarray1;
	}

	public void setNumberarray1(int[] numberarray1) {
		this.numberarray1 = numberarray1;
	}

	public List<String> getLists() {
		return lists;
	}

	public void setLists(List<String> lists) {
		this.lists = lists;
	}

	public Map<String, String> getMaps() {
		return maps;
	}

	public void setMaps(Map<String, String> maps) {
		this.maps = maps;
	}
	
}
		]]>
		</programlisting>
		<para>测试URL http://localhost:8080/ajax/Captcha.action</para>

		<section>
			<title>GET/POST JSON</title>
			<para>struts.xml 文件加入 enableSMD</para>
			<programlisting>
			<![CDATA[
		<action name="Captcha" class="com.example.action.ajax.Captcha">
			<interceptor-ref name="defaultStack" />
			<interceptor-ref name="json">
				<param name="enableSMD">true</param>
			</interceptor-ref>
			<result name="success" type="json"></result>
		</action>
			]]>
			</programlisting>
			<para>Java 代码</para>
			<programlisting>
			<![CDATA[
package com.example.action.ajax;

import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionSupport;

public class Captcha extends ActionSupport {
	private static final long serialVersionUID = 7284583098398030297L;

	private String phone = "13113668890";
	private String email = "netkiller@msn.com";
	private Boolean status = false;
	
	//no getter method, will not include in the JSON

	public Captcha() {

	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String execute() {
		this.status = true;
		System.out.printf("%s, %s, %s, %b\n", this.getClass().getName(), this.getPhone(), this.getEmail(), this.getStatus());
		return Action.SUCCESS;
	}

	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}
	public boolean getStatus() {
		return this.status;
	}
}
			]]>
			</programlisting>
			<para>使用 curl 模拟 post 测试</para>
			<programlisting>
			<![CDATA[
# curl http://192.168.4.34:8080/ajax/Captcha.do
{"email":"netkiller@msn.com","phone":"13113668890","status":true} 

# curl -X POST -H "Content-Type:application/json" -d '{"phone":"13066884444", "email":"neo.chan@live.com"}' http://192.168.4.34:8080/ajax/Captcha.do
{"email":"neo.chan@live.com","phone":"13066884444","status":true}
			]]>
			</programlisting>
			<para>GET 例子</para>
			<programlisting>
			<![CDATA[
# curl "http://192.168.4.34:8080/ajax/Captcha.do?phone=13322993040&email=netkiller@mac.com"
{"email":"netkiller@mac.com","phone":"13322993040","status":true}
			]]>
			</programlisting>		
		</section>
	</section>
	<section id="json">
		<title>Json 内容展示</title>
		<para>Struts 配置文件</para>
		<programlisting>
		<![CDATA[
	<package name="information" extends="main" namespace="/inf">
		<action name="Information" class="com.example.action.Infomation">
			<result type="tiles">information</result>
		</action>
	</package>
		]]>
		</programlisting>
		<para>Action 文件</para>
		<programlisting>
		<![CDATA[
package cn.netkiller.action;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.net.URL;
import java.net.URLConnection;
import java.nio.charset.Charset;

import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonReader;

import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionSupport;

public class Infomation extends ActionSupport{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;


	private JsonObject jsonObject = null;
	private String jsonString = "";

	@Override
	public String execute() throws IOException {
		
		String URL = "http://inf.example.com/list/json/93/20/0.html";
		System.out.printf("%s Requeted URL is %s", this.getClass().getName(), URL);
		
		StringBuilder sb = new StringBuilder();
		URLConnection urlConn = null;
		InputStreamReader in = null;
		try {
			URL url = new URL(URL);
			urlConn = url.openConnection();
			if (urlConn != null)
				urlConn.setReadTimeout(60 * 1000);
			if (urlConn != null && urlConn.getInputStream() != null) {
				in = new InputStreamReader(urlConn.getInputStream(), Charset.defaultCharset());
				BufferedReader bufferedReader = new BufferedReader(in);
				if (bufferedReader != null) {
					int cp;
					while ((cp = bufferedReader.read()) != -1) {
						sb.append((char) cp);
					}
					bufferedReader.close();
				}
			}
			in.close();

			jsonString = sb.toString();

			System.out.println(jsonString);

			JsonReader reader = Json.createReader(new StringReader(jsonString));

			JsonObject jsonObject = reader.readObject();
			this.setJsonObject(jsonObject);

			reader.close();

			// System.out.println(jsonObject.size());

			/*for (int i = 0; i < jsonObject.size() - 2; i++) {
				JsonObject rowObject = jsonObject.getJsonObject(Integer.toString(i));
				// System.out.println(rowObject.toString());
				System.out.printf("%s\t%s\t%s\n", rowObject.getJsonString("id"), rowObject.getJsonString("title"),
						rowObject.getJsonString("ctime"));
			}*/
			
			

		} catch (Exception e) {
			throw new RuntimeException("Exception while calling URL:" + URL, e);
		}

		return Action.SUCCESS;
	}

	public JsonObject getJsonObject() {
		return jsonObject;
	}

	public void setJsonObject(JsonObject jsonObject) {
		this.jsonObject = jsonObject;
	}

	public String getJsonString() {
		return jsonString;
	}

	public void setJsonString(String jsonString) {
		this.jsonString = jsonString;
	}
}
		]]>
		</programlisting>
		<para>JSP 文件</para>
		<programlisting>
		<![CDATA[
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="s" uri="/struts-tags"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<table>
	<c:forEach items="${jsonObject.entrySet()}" var="json"
		varStatus="status">
		<c:if test="${not status.last}">
			<tr>
				<td>${json.key+1}</td>
				<td>${json.value.getJsonString("id")}</td>
				<td>${json.value.getJsonString("title")}</td>
				<td>${json.value.getJsonString("ctime")}</td>
			</tr>
		</c:if>
	</c:forEach>
</table>
===================

<c:forEach items="${jsonObject.entrySet()}" var="json">
      ${json.value.toString()}
</c:forEach>

===========

<s:property value="jsonString" />
		]]>
		</programlisting>
		<para>解决双引号问题</para>
		<programlisting>
		<![CDATA[
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<%@ taglib prefix="s" uri="/struts-tags"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<table>
	<c:forEach items="${jsonObject.entrySet()}" var="json"
		varStatus="status">
		<c:if test="${not status.last}">

			<c:set var="id"
				value="${fn:replace(json.value.getJsonString('id'),'\"', '')}" />
			<c:set var="title" value="${fn:replace(json.value.getJsonString('title'),'\"', '')}" />
			<c:set var="ctime"
				value="${fn:replace(json.value.getJsonString('ctime'),'\"', '')}" />
			<tr>
				<td><c:out value="${status.count}" /></td>
				<td><a href="/inf/Detail.do?id=<c:out value="${id}"/>"><c:out
							value="${title}" /></a></td>
				<td><c:out value="${ctime}" /></td>
			</tr>
		</c:if>
	</c:forEach>
</table>

<c:set var="pages" value="${jsonObject.getJsonObject('pages')}" />


<a href="${pages.first}">首页</a>
<a href="${pages.before}">上一页</a>
<a href="${pages.next}">下一页</a>
<a href="${pages.last}">尾页</a>

<span>Count: ${pages.count}, Total: ${pages.total}</span>
		]]>
		</programlisting>
		<section>
			<title>禁止方法</title>
			<programlisting>
			
	@JSON(serialize = false)
	public String getDatas() {
		return datas;
	}
			</programlisting>
			<para>使用 excludeProperties 在  Action 中排除</para>
			<programlisting>
			<![CDATA[
	<action name="withdraw" class="cn.netkiller.api.action.Report" method="getHistory">
		<interceptor-ref name="defaultStack" />
		<interceptor-ref name="json">
			<param name="enableSMD">true</param>
		</interceptor-ref>
		<result name="success" type="json">
			<param name="enableGZIP">true</param>
			<param name="excludeProperties">.*direction</param>
		</result>
	</action>
			]]>
			</programlisting>
		</section>
		<section>
			<title>格式化日期</title>
			<programlisting>
@JSON(format="yyyy-MM-dd") 
public Date getDate(){ 
	return date; 
}			
			</programlisting>
		</section>
		<section>
			<title>重命名变量名</title>
			<programlisting>
@JSON(name="mypassword") 
public String getPassword() { 
	return password; 
}
			</programlisting>
		</section>
		
		<section>
			<title>org.apache.struts2.json</title>
			<programlisting>
JSONUtil.serialize(sb.toString());
JSONUtil.deserialize(sb.toString());			

			</programlisting>
		</section>
	</section>
	<section id="interceptor">
		<title>Interceptor</title>
		<section>
			<title>Session </title>
			<para>在 web.xml 文件中定义 Session 超时时间</para>
			<programlisting>
			<![CDATA[
<session-config>  
    <session-timeout>30</session-timeout>  
</session-config>			
			]]>
			</programlisting>
			<para>创建拦截器程序</para>
			<programlisting>
			<![CDATA[
package cn.netkiller.interceptor;

import java.util.Map;
import java.lang.Override;

import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;

public class SessionInterceptor extends AbstractInterceptor {

	private static final long serialVersionUID = 8347994918002285514L;

	@Override
	public String intercept(ActionInvocation invocation) throws Exception {
		Map<String, Object> session = invocation.getInvocationContext().getSession();
		if (session.isEmpty())
			return "nosession"; // session is empty/expired
		return invocation.invoke();
	}
}
			]]>
			</programlisting>
			<para>配置拦截器</para>
			<programlisting>
			<![CDATA[
	<package name="mobile" extends="main" namespace="/mobile">
		<global-results>
			<result name="nosession" type="redirectAction">
				<param name="actionName">Index</param>
				<param name="namespace">/mobile</param>
			</result>
		</global-results>			
		<interceptor name="session" class="cn.netkiller.SessionInterceptor" />
		<interceptor-stack name="sessionExpirayStack">
    		<interceptor-ref name="defaultStack"/>
    		<interceptor-ref name="session"/>
   		</interceptor-stack>
   		<default-interceptor-ref name="sessionExpirayStack" />

		<action name="testAction" class="TestClass">
    		<interceptor-ref name="sessionExpirayStack" />
    		<result name="success">success.jsp</result>
    		<result name="error">error.jsp</result>
  		</action>
  	</package>
			]]>
			</programlisting>
			<programlisting>
			<![CDATA[

			]]>
			</programlisting>			
		</section>
	</section>
	<section id="faq">
		<title>FAQ</title>
		<section>
			<title>Struts 怎样判断用户来自电脑还是移动设备</title>
			<programlisting>
			<![CDATA[
package cn.netkiller.action;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import javax.servlet.http.HttpServletRequest;

public class Index extends ActionSupport {

	private static final long serialVersionUID = 7782483098148890753L;

	public String execute() {
		HttpServletRequest request = (HttpServletRequest) ActionContext.getContext().get(org.apache.struts2.StrutsStatics.HTTP_REQUEST);
		String userAgent = request.getHeader("User-Agent").toLowerCase();
		System.out.println(this.getClass().getName() + ": " + userAgent);
		String[] mobileAgents = { "iphone", "android", "phone", "mobile", "wap", "netfront", "java", "opera mobi", "opera mini", "ucweb", "windows ce", "symbian", "series", "webos", "sony", "blackberry", "dopod", "nokia", "samsung", "palmsource", "xda", "pieplus", "meizu", "midp", "cldc", "motorola", "foma", "docomo", "up.browser", "up.link", "blazer", "helio", "hosin", "huawei", "novarra", "coolpad", "webos", "techfaith", "palmsource", "alcatel", "amoi", "ktouch", "nexian", "ericsson", "philips", "sagem", "wellcom", "bunjalloo", "maui", "smartphone", "iemobile", "spice", "bird", "zte-", "longcos", "pantech", "gionee", "portalmmm", "jig browser", "hiptop", "benq", "haier", "^lct", "320x320", "240x320", "176x220", "w3c ", "acs-", "alav", "alca", "amoi", "audi", "avan", "benq", "bird", "blac", "blaz", "brew", "cell", "cldc", "cmd-", "dang", "doco", "eric", "hipt", "inno", "ipaq", "java", "jigs", "kddi", "keji", "leno", "lg-c", "lg-d", "lg-g", "lge-", "maui", "maxo", "midp", "mits", "mmef", "mobi", "mot-",
				"moto", "mwbp", "nec-", "newt", "noki", "oper", "palm", "pana", "pant", "phil", "play", "port", "prox", "qwap", "sage", "sams", "sany", "sch-", "sec-", "send", "seri", "sgh-", "shar", "sie-", "siem", "smal", "smar", "sony", "sph-", "symb", "t-mo", "teli", "tim-", "tsm-", "upg1", "upsi", "vk-v", "voda", "wap-", "wapa", "wapi", "wapp", "wapr", "webc", "winw", "winw", "xda", "xda-", "Googlebot-Mobile" };
		if (userAgent != null) {
			for (String mobileAgent : mobileAgents) {
				if (userAgent.indexOf(mobileAgent) >= 0) {
					return "mobile";
				}
			}
		}

		return "computer";
	}
}			
			]]>
			</programlisting>
			<programlisting>
			<![CDATA[
	<action name="Index" class="cn.netkiller.action.Index">
		<result name="computer" type="redirectAction">
			<param name="actionName">index</param>
			<param name="namespace">/computer</param>
		</result>
		<result name="mobile" type="redirect">
			<param name="location">http://m.netkiller.cn/index.html</param>
		</result>
	</action>			
			]]>
			</programlisting>
			<screen>
			
			</screen>
		</section>
	</section>
</chapter>
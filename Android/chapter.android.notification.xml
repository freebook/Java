<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="notification" ?>
	<title>Notification 通知中心</title>
	<section>
		<title>文本通知</title>
		<programlisting>
		<![CDATA[
    private int createNotification(String title, String text) {
        String channelId = "channelId";
        String channelName = "channelName";
        String description = "description";
        String group = "group";
        int notificationId = new Random().nextInt(101);
        NotificationManagerCompat notificationManagerCompat = NotificationManagerCompat.from(this);
        NotificationChannel channel = new NotificationChannel(channelId, channelName, NotificationManager.IMPORTANCE_HIGH);
        channel.setDescription(description);
        notificationManagerCompat.createNotificationChannel(channel);

        NotificationCompat.Builder notification = new NotificationCompat.Builder(this, channelId)
                .setContentTitle(title).setContentText(text)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setAutoCancel(true).setGroup(group);

        notificationManagerCompat.notify(notificationId, notification.build());
        return notificationId;
    }
		]]>
		</programlisting>
		<para></para>
		<programlisting>
		<![CDATA[
        CharSequence name = "test";
        String description = "test";
        NotificationChannel channel = new NotificationChannel("test", name, NotificationManager.IMPORTANCE_DEFAULT);
        channel.setDescription(description);


        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        notificationManager.createNotificationChannel(channel);
        Notification.Builder builder = new Notification.Builder(this, "test")
                .setContentTitle("XXX 门票打折")          //标题
                .setContentText("参与 XXX 领取 XXX")      //内容
                .setSubText("打折信息")                   //内容下面的一小段文字
                .setWhen(System.currentTimeMillis())     //设置通知时间
                .setSmallIcon(R.mipmap.ic_launcher)      //设置小图标
                .setAutoCancel(false);                   //设置点击后取消Notification

        notificationManager.notify(1, builder.build());		
		]]>
		</programlisting>
	</section>
	<section>
		<title>添加点击操作</title>
		<programlisting>
		<![CDATA[
    private int createNotification(String title, String text) {
        String channelId = "channelId";
        String channelName = "channelName";
        String description = "description";
        String group = "group";
        int notificationId = new Random().nextInt(101);

        Intent intent = new Intent(this, FullscreenActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_IMMUTABLE);

        NotificationManagerCompat notificationManagerCompat = NotificationManagerCompat.from(this);
        NotificationChannel channel = new NotificationChannel(channelId, channelName, NotificationManager.IMPORTANCE_HIGH);
        channel.setDescription(description);
        notificationManagerCompat.createNotificationChannel(channel);

        NotificationCompat.Builder notification = new NotificationCompat.Builder(this, channelId)
                .setContentTitle(title).setContentText(text)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setContentIntent(pendingIntent)
                .setAutoCancel(true);

        notificationManagerCompat.notify(notificationId, notification.build());
        return notificationId;
    }		
		]]>
		</programlisting>
	</section>
	<section>
		<title>Notification 给 Activity 传值</title>
		<para>Notification 跳转 MainActivity 会执行 onStop() 和 onDestroy() 导致
			Services 退出
		</para>
		<programlisting>
		<![CDATA[
private int createNotification(String title, String text) {

        String channelId = "NORMAL"; // IMPORTANT
        String channelName = "消息";
        String description = "站内消息通知";
        String group = "group";
        int notificationId = new Random().nextInt(1000);

        Intent intent = new Intent(this, MainActivity.class);
//        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        intent.putExtra("Notification", true);

//        PendingIntent.FLAG_IMMUTABLE
        int notifyId = (int) System.currentTimeMillis();
        PendingIntent pendingIntent = PendingIntent.getActivity(this, notifyId, intent, PendingIntent.FLAG_UPDATE_CURRENT);
        NotificationManagerCompat notificationManagerCompat = NotificationManagerCompat.from(this);
        NotificationChannel channel = new NotificationChannel(channelId, channelName, NotificationManager.IMPORTANCE_HIGH);
        channel.setDescription(description);
        notificationManagerCompat.createNotificationChannel(channel);

//        Bundle bundle = new Bundle();
//        bundle.putBoolean("Notification", true);

        NotificationCompat.Builder notification = new NotificationCompat.Builder(this, channelId)
                .setContentTitle(title).setContentText(text)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setPriority(NotificationCompat.PRIORITY_HIGH)
                .setContentIntent(pendingIntent)
//                .setExtras(bundle)
                .setAutoCancel(true);
//                .setGroup(group);
//                .setFullScreenIntent(fullScreenPendingIntent, true);

        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
        }
        notificationManagerCompat.notify(notificationId, notification.build());
        return notificationId;
    }
		]]>
		</programlisting>
	</section>
	<section>
		<title>通过 isNotification 判断是否需要执行 onStop() 和 onDestroy()</title>
		<programlisting>
		<![CDATA[
	private boolean isNotification = false;
	
    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        if (intent != null) {
            boolean isExit = intent.getBooleanExtra("QUIT", false);
            if (isExit) {
                this.finish();
            }
            isNotification = intent.getBooleanExtra("Notification", false);
        }
        Log.d(TAG, "onNewIntent()");
    }
    
    @Override
    public void onStop() {
        super.onStop();
        if (isNotification) return;
        if (messageQueueService != null) {
            stopService(messageQueueService);
        }
        aigcSpeech.stopSpeech();
        Log.d(TAG, "onStop()");
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (isNotification) return;
        if (messageQueueService != null) {
            stopService(messageQueueService);
        }
        if (mainBroadcastReceiver != null) {
            unregisterReceiver(mainBroadcastReceiver);
        }
        aigcSpeech.stopSpeech();
        Log.d(TAG, "onDestroy()");
    }    
		]]>
		</programlisting>
	</section>

</chapter>
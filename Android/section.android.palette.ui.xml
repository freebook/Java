<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="ui" ?>
	<title>UI 界面</title>
	<section id="Toast.default">
		<title>Toast</title>
		<programlisting>
	<![CDATA[
Toast.makeText(getApplicationContext(), "默认Toast样式", Toast.LENGTH_SHORT).show();	  
	]]>
		</programlisting>

		<section id="Toast.define">
			<title>自定义样式</title>
			<programlisting>
		<![CDATA[
toast = Toast.makeText(getApplicationContext(),"自定义位置Toast", Toast.LENGTH_LONG);
   toast.setGravity(Gravity.CENTER, 0, 0);
   toast.show();
		]]>
			</programlisting>
		</section>
		<section id="Toast.picture">
			<title>带有图片的样式</title>
			<programlisting>
		<![CDATA[
toast = Toast.makeText(getApplicationContext(),"带图片的Toast", Toast.LENGTH_LONG);
   toast.setGravity(Gravity.CENTER, 0, 0);
   LinearLayout toastView = (LinearLayout) toast.getView();
   ImageView imageView = new ImageView(getApplicationContext());
   imageView.setImageResource(R.drawable.icon);
   toastView.addView(imageView, 0);
   toast.show(); 		
		]]>
			</programlisting>
		</section>
	</section>
	<section id="Button">
		<title>Button</title>
		<programlisting>
		<![CDATA[
public class MainActivity extends AppCompatActivity {

    //我们需要自己写一个常量作为requestCode，在请求result时传递进去
    public static final int REQUEST_CODE_NORMAL = 100;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        Button button = (Button) findViewById(R.id.Button);

        button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
				startActivityForResult(new Intent(this,SecondActivity.class),REQUEST_CODE_NORMAL);
            }
        });	
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == REQUEST_CODE_NORMAL) {
        	//获得Result数据并处理
            ...
            ...
        }
    }
}
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[
public class SecondActivity extends AppCompatActivity {   
   
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.save);
     
     	Button button = (Button) findViewById(R.id.SaveButton);

        button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
		        Intent intent = new Intent(this,MainResultActivity.class);
		        intent.putExtra("content",etContent.getText().toString());
		        setResult(1,intent);
		        //发送Result数据给请求方，然后finish（）
		        finish();        
            }
        });	
    }
}		
		]]>
		</programlisting>
		<section id="Button.setEnabled">
			<title>启用禁用</title>
			<programlisting>
			<![CDATA[
myButton.setEnabled(false);			
			]]>
			</programlisting>
		</section>
		<section id="OnClickListener">
			<title>实现 OnClickListener 接口</title>
			<programlisting>
			<![CDATA[
package cn.netkiller.video;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    private Button buttonVideoView;
    private Button buttonSurfaceView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        buttonVideoView = (Button) findViewById(R.id.buttonVideoView);
        buttonVideoView.setOnClickListener(this);

        buttonSurfaceView = (Button) findViewById(R.id.buttonSurfaceView);
        buttonSurfaceView.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        Intent intent;
        switch (v.getId()) {
            case R.id.buttonVideoView:
                startActivity(new Intent(MainActivity.this, VideoViewActivity.class));
                break;
            case R.id.buttonSurfaceView:

                break;
            default:
                break;
        }
    }
}			
			]]>
			</programlisting>
		</section>
		<section>
			<title>Fragment 中使用 Button</title>
			<programlisting>
			<![CDATA[
		Button buttonWifi = root.findViewById(R.id.buttonWifi);
        buttonWifi.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent();
                ComponentName componentName = new ComponentName("com.android.settings", "com.android.settings.wifi.WifiSettings");
                intent.setComponent(componentName);
                ResolveInfo resolveInfo = getActivity().getPackageManager().resolveActivity(intent, 0);
                if (resolveInfo != null) {
                    startActivity(intent);
                }
            }
        });			
			]]>
			</programlisting>
		</section>
	</section>
	<section id="ListView">
		<title>ListView</title>
		<section id="ListView.array">
			<title>Array</title>
			<programlisting>
			<![CDATA[
        String[] list = Arrays.asList("Apple", "Banana", "Orange", "Watermelon",
                "Pear", "Grape", "Pineapple", "Strawberry", "Cherry", "Mango";
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_list_item_1,data);
        ListView listView = (ListView) findViewById(R.id.history);
        listView.setAdapter(adapter);	
			]]>
			</programlisting>
			<programlisting>
			<![CDATA[
    <ListView
        android:id="@+id/history"
        android:layout_width="368dp"
        android:layout_height="444dp"
        android:scrollbars="horizontal"
        tools:layout_editor_absoluteX="8dp"
        tools:layout_editor_absoluteY="59dp" />	
			]]>
			</programlisting>
		</section>
		<section id="ListView.List">
			<title>List</title>
			<programlisting>
			<![CDATA[
		List<String> list = Arrays.asList("Apple", "Banana", "Orange", "Watermelon","Pear", "Grape", "Pineapple", "Strawberry", "Cherry", "Mango");
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_list_item_1,list);
        ListView listView = (ListView) findViewById(R.id.history);
        listView.setAdapter(adapter);        		
			]]>
			</programlisting>
		</section>
		<section id="setOnItemClickListener">
			<title>setOnItemClickListener()</title>
			<programlisting>
			<![CDATA[
        List<String> list = Arrays.asList("Text 文本", "URL 网址", "电话号码", "短信","开启应用", "地址", "日历", "图片", "邮箱", "GPS 坐标");
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,list);
        final ListView listView = (ListView) findViewById(R.id.schemaList);
        listView.setAdapter(adapter);


        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

                String text = listView.getItemAtPosition(position)+"";
                Log.e("WRITE","position="+position+", text="+text);
            }
        });	
			]]>
			</programlisting>
		</section>
		<section id="ListView.implements">
			<title>用接口方法实现</title>
			<programlisting>
		<![CDATA[
public class MainActivity extends Activity implements OnItemClickListener, OnScrollListener
		]]>
			</programlisting>
			<programlisting>
		<![CDATA[
		List<String> list = Arrays.asList("Text 文本", "URL 网址", "电话号码", "短信","开启应用", "地址", "日历", "图片", "邮箱", "GPS 坐标");
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,list);
        final ListView listView = (ListView) findViewById(R.id.schemaList);
        listView.setAdapter(adapter);
        
        listView.setOnItemClickListener(this);
        listView.setOnScrollListener(this);		
		]]>
			</programlisting>
			<programlisting>
		<![CDATA[
	@Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        String text = listView.getItemAtPosition(position)+"";
        Log.e("WRITE","position="+position+", text="+text);
    }		
		]]>
			</programlisting>
			<programlisting>
		<![CDATA[
	@Override
    public void onScrollStateChanged(AbsListView view, int scrollState) {

        switch (scrollState) {
        case SCROLL_STATE_FLING:
            Log.i("tag", "用户手指离开屏幕后，因惯性继续滑动");
            Map<String,Object>map = new HashMap<String,Object>();
            map.put("icon", R.drawable.ic_launcher);
            map.put("text", "新增加项目");
            dataList.add(map);  
            adapter.notifyDataSetChanged(); 
            break;
        case SCROLL_STATE_IDLE:
            Log.i("tag","已经停止滑动");
            break;      
        case SCROLL_STATE_TOUCH_SCROLL:
            Log.i("tag", "手指未离开屏幕，屏幕继续滑动");
            break;
        }   
    }		
		]]>
			</programlisting>
		</section>
	</section>

	<section id="Switch">
		<title>Switch</title>
		<programlisting>
	<![CDATA[
    <Switch
        android:id="@+id/switchWrite"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="8dp"
        android:layout_marginTop="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginBottom="8dp"
        android:text="NDEF Message write"
        android:textOff="NDEF Message write Off"
        android:textOn="NDEF Message write On"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/writeButton"
        app:layout_constraintHorizontal_bias="0.076"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/ndefWrite"
        app:layout_constraintVertical_bias="0.087" />	
	]]>
		</programlisting>
		<programlisting>
	<![CDATA[
		final Switch switchWrite = (Switch) findViewById(R.id.switchWrite);

        switchWrite.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                if(isChecked) {
                    status.setText(switchWrite.getTextOn().toString());
                } else {
                    status.setText(switchWrite.getTextOff().toString());
                }
            }
        });	
	]]>
		</programlisting>
		<programlisting>
	<![CDATA[
	if(switchWrite.isChecked()){

    }	
	]]>
		</programlisting>
	</section>
	<section id="TextView">
		<title>TextView</title>
		<para>圆角，胶囊形状</para>
		<programlisting>
		<![CDATA[
        <TextView
            android:id="@+id/hotelClose"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="end"
            android:background="@drawable/TextViewCornerRadius"
            android:paddingStart="12dp"
            android:paddingTop="2dp"
            android:paddingEnd="12dp"
            android:paddingBottom="2dp"
            android:text="关闭"
            android:textColor="@color/white"
            android:textSize="16sp" />		
		]]>
		</programlisting>
		<para>drawable/TextViewCornerRadius.xml</para>
		<programlisting>
		<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
<item >
    <shape android:shape="rectangle">
        <stroke android:width="1.5dp" android:color="@color/white" />
        <solid android:color="#00000000" />
        <corners android:radius="15dp" />
    </shape>
</item>
</layer-list>		
		]]>
		</programlisting>
	</section>
	<section id="ProgressBar">
		<title>ProgressBar</title>
	</section>
	<section id="Dialog">
		<title>Dialog</title>
	</section>
</chapter>
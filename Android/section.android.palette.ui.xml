<?xml version="1.0" encoding="UTF-8"?>
<section id="index">
    <?dbhtml dir="ui"?>
	<title>UI 界面</title>
	<section id="Toast.default">
		<title>Toast</title>
		<programlisting>
	<![CDATA[
Toast.makeText(getApplicationContext(), "默认Toast样式", Toast.LENGTH_SHORT).show();	  
	]]>
		</programlisting>

		<section id="Toast.define">
			<title>自定义样式</title>
			<programlisting>
		<![CDATA[
toast = Toast.makeText(getApplicationContext(),"自定义位置Toast", Toast.LENGTH_LONG);
   toast.setGravity(Gravity.CENTER, 0, 0);
   toast.show();
		]]>
			</programlisting>
		</section>
		<section id="Toast.picture">
			<title>带有图片的样式</title>
			<programlisting>
		<![CDATA[
toast = Toast.makeText(getApplicationContext(),"带图片的Toast", Toast.LENGTH_LONG);
   toast.setGravity(Gravity.CENTER, 0, 0);
   LinearLayout toastView = (LinearLayout) toast.getView();
   ImageView imageView = new ImageView(getApplicationContext());
   imageView.setImageResource(R.drawable.icon);
   toastView.addView(imageView, 0);
   toast.show(); 		
		]]>
			</programlisting>
		</section>
	</section>


	<section id="Dialog">
		<title>Dialog</title>
		<programlisting>
		<![CDATA[
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this)
                .setTitle("你问的是：")//设置对话框 标题
                .setIcon(R.drawable.icon)//设置图标
                .setMessage(prompt);

        builder.setPositiveButton("确认", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                aigcSpeech.say("创作中请稍后");
//                                    Toast.makeText(MainActivity.this,"you click 'yes' button ", Toast.LENGTH_SHORT).show();
                UUID uuid = UUID.randomUUID();
                session = uuid.toString();
                aigc.story(session, prompt, value -> {
                    Log.d(TAG, "Session: " + value + " Text: " + prompt);
                });
            }
        });

        builder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Toast.makeText(MainActivity.this, "取消操作", Toast.LENGTH_SHORT).show();
                aigcSpeech.say("操作取消了");
            }
        });

        builder.create().show();		
		]]>
		</programlisting>
	</section>
	<section id="DatePicker">
		<title>DatePicker</title>
		<programlisting>
        <![CDATA[ 
        <DatePicker
        android:id="@+id/dp_date"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:calendarViewShown="false"
        android:datePickerMode="spinner"
        android:gravity="center"
        android:spinnersShown="true" />
        ]]>
		</programlisting>


	</section>
</section>

<section id="Text">
	<title>Text</title>
	<section>
		<title>Text 相关属性</title>
		<section id="TextView.setEnabled">
			<title>Text 焦点相关属性</title>
			<programlisting>
            <![CDATA[ 
        editText.setEnabled(false); //禁用EditText
        editText.setFocusableInTouchMode(false);//不可编辑
        editText.setKeyListener(null);//不可粘贴，长按不会弹出粘贴框
        editText.setClickable(false);//不可点击，但是这个效果我这边没体现出来，不知道怎没用
        editText.setFocusable(false);//不可编辑
       		 ]]>
			</programlisting>
		</section>
		<section id="TextView.hint">
			<title>提示信息</title>
			<programlisting>
		<![CDATA[
    android:hint="请输入你的问题"
    android:textColorHint="#ccc"		
		]]>
			</programlisting>


		</section>
	</section>
	<section id="TextView">
		<title>TextView</title>

		<section>
			<title>圆角边框</title>
			<para>圆角，胶囊形状</para>
			<programlisting>
    <![CDATA[
    <TextView
        android:id="@+id/hotelClose"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="end"
        android:background="@drawable/TextViewCornerRadius"
        android:paddingStart="12dp"
        android:paddingTop="2dp"
        android:paddingEnd="12dp"
        android:paddingBottom="2dp"
        android:text="关闭"
        android:textColor="@color/white"
        android:textSize="16sp" />		
    ]]>
			</programlisting>
			<para>drawable/TextViewCornerRadius.xml</para>
			<programlisting>
    <![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
<item >
<shape android:shape="rectangle">
    <stroke android:width="1.5dp" android:color="@color/white" />
    <solid android:color="#00000000" />
    <corners android:radius="15dp" />
</shape>
</item>
</layer-list>		
    ]]>
			</programlisting>
		</section>

		<section>
			<title>阴影设置</title>
			<programlisting>
        <![CDATA[
android:shadowColor：	阴影的颜色
android:shadowDx：		水平方向上的偏移量
android:shadowDy：		垂直方向上的偏移量
android:shadowRadius：	是阴影的的半径大少			
        ]]>
			</programlisting>
		</section>
		<section id="textview.scrollbars">
			<title>滚动条</title>
			<para>设置滚动条方向 android:scrollbars="vertical"，是隐藏滚动条滑块
				android:fadeScrollbars="true"
			</para>
			<programlisting>
        <![CDATA[
                <TextView
                    android:id="@+id/textView"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_weight="1"
                    android:inputType="textMultiLine"
                    android:padding="10dp"
                    android:scrollbars="vertical"
                    android:fadeScrollbars="true"
                    android:text="按住麦克风图标说话"
                    android:textSize="24sp" />			
        ]]>
			</programlisting>
			<programlisting>
        <![CDATA[
textView = findViewById(R.id.textView);
textView.setMovementMethod(ScrollingMovementMethod.getInstance());
        ]]>
			</programlisting>
		</section>
	</section>
	<section id="EditText">
		<title>EditText</title>
		<programlisting>
        <![CDATA[ 
        <EditText
        android:inputType="none" 
        android:inputType="phone" //电话号码
        android:inputType="text" //文本类型，多为大写、小写和数字符号。 
        android:inputType="textCapCharacters" //字母大写 
        android:inputType="textCapWords" //首字母大写 
        android:inputType="textCapSentences" //仅第一个字母大写 
        android:inputType="textAutoCorrect" //自动完成 
        android:inputType="textAutoComplete" //自动完成 
        android:inputType="textMultiLine" //多行输入 
        android:inputType="textImeMultiLine" //输入法多行（如果支持） 
        android:inputType="textNoSuggestions" //不提示 
        android:inputType="textUri" //网址 
        android:inputType="textEmailAddress" //电子邮件地址 
        android:inputType="textEmailSubject" //邮件主题 
        android:inputType="textShortMessage" //短讯 
        android:inputType="textLongMessage" //长信息 
        android:inputType="textPersonName" //人名 
        android:inputType="textPostalAddress" //地址
        android:inputType="textPassword" //密码 
        android:inputType="textVisiblePassword" //可见密码
        android:inputType="textWebEditText" //作为网页表单的文本 
        android:inputType="textFilter" //文本筛选过滤 
        android:inputType="textPhonetic" //拼音输入 
        //数值类型 
        android:inputType="number" //数字 
        android:inputType="numberSigned" //带符号数字格式 
        android:inputType="numberDecimal" //带小数点的浮点格式 
        android:inputType="datetime" //时间日期 
        android:inputType="date" //日期键盘 
        android:inputType="time" //时间键盘
        />
        ]]>
		</programlisting>
		<section>
			<title>禁止编辑</title>
			<programlisting>
        	<![CDATA[
android:editable="false"
android:focusable="false"


设置不可编辑状态：
editText.setFocusable(false);
editText.setFocusableInTouchMode(false);


设置可编辑状态：
editText.setFocusableInTouchMode(true);
editText.setFocusable(true);
editText.requestFocus();        	
        	]]>
			</programlisting>
		</section>
		<section>
			<title>禁止选择文本</title>
			<programlisting>
        	<![CDATA[

android:cursorVisible="false"//不显示光标
android:textIsSelectable="false"        	
        	]]>
			</programlisting>
		</section>
	</section>
	<section>
		<title>光标移动到行尾</title>
		<programlisting>
			<![CDATA[
binding.editText.setSelection(binding.editText.getText().toString().length());
			]]>
		</programlisting>
	</section>
	<section>
		<title>禁止选择文本</title>
		<programlisting>
		<![CDATA[
	android:textIsSelectable="false"
		]]>
		</programlisting>
	</section>
	<section id="EditText">
		<title>EditText 属性设置</title>
		<programlisting>
    <![CDATA[
editText.setEnabled(false);//去掉点击时编辑框下面横线:
editText.setFocusable(false);//不可编辑
editText.setFocusableInTouchMode(false);//不可编辑
editText.setKeyListener(null);//不可粘贴，长按不会弹出粘贴框
editText.setClickable(false);//不可点击，
editText.setKeyListener(null);//不可粘贴，长按不会弹出粘贴框

    ]]>
		</programlisting>


	</section>

	<section>
		<title>设置 app:backgroundTint</title>
		<programlisting>
	    <![CDATA[
someTextView.getBackground().setTint(yourIntColor);
	    ]]>
		</programlisting>
	</section>

</section>
<section id="Button">
	<title>Button</title>
	<programlisting>
    <![CDATA[
public class MainActivity extends AppCompatActivity {

//我们需要自己写一个常量作为requestCode，在请求result时传递进去
public static final int REQUEST_CODE_NORMAL = 100;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    
    Button button = (Button) findViewById(R.id.Button);

    button.setOnClickListener(new View.OnClickListener() {
        public void onClick(View view) {
            startActivityForResult(new Intent(this,SecondActivity.class),REQUEST_CODE_NORMAL);
        }
    });	
}

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (requestCode == REQUEST_CODE_NORMAL) {
        //获得Result数据并处理
        ...
        ...
    }
}
}
    ]]>
	</programlisting>
	<programlisting>
    <![CDATA[
public class SecondActivity extends AppCompatActivity {   

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.save);
 
     Button button = (Button) findViewById(R.id.SaveButton);

    button.setOnClickListener(new View.OnClickListener() {
        public void onClick(View view) {
            Intent intent = new Intent(this,MainResultActivity.class);
            intent.putExtra("content",etContent.getText().toString());
            setResult(1,intent);
            //发送Result数据给请求方，然后finish（）
            finish();        
        }
    });	
}
}		
    ]]>
	</programlisting>
	<section id="Button.setEnabled">
		<title>启用禁用</title>
		<programlisting>
        <![CDATA[
myButton.setEnabled(false);			
        ]]>
		</programlisting>
	</section>
	<section id="OnClickListener">
		<title>实现 OnClickListener 接口</title>
		<programlisting>
        <![CDATA[
package cn.netkiller.video;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

private Button buttonVideoView;
private Button buttonSurfaceView;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    buttonVideoView = (Button) findViewById(R.id.buttonVideoView);
    buttonVideoView.setOnClickListener(this);

    buttonSurfaceView = (Button) findViewById(R.id.buttonSurfaceView);
    buttonSurfaceView.setOnClickListener(this);
}

@Override
public void onClick(View v) {
    Intent intent;
    switch (v.getId()) {
        case R.id.buttonVideoView:
            startActivity(new Intent(MainActivity.this, VideoViewActivity.class));
            break;
        case R.id.buttonSurfaceView:

            break;
        default:
            break;
    }
}
}			
        ]]>
		</programlisting>
	</section>
	<section id="Fragment 中使用 Button">
		<title>Fragment 中使用 Button</title>
		<programlisting>
        <![CDATA[
    Button buttonWifi = root.findViewById(R.id.buttonWifi);
    buttonWifi.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View view) {
            Intent intent = new Intent();
            ComponentName componentName = new ComponentName("com.android.settings", "com.android.settings.wifi.WifiSettings");
            intent.setComponent(componentName);
            ResolveInfo resolveInfo = getActivity().getPackageManager().resolveActivity(intent, 0);
            if (resolveInfo != null) {
                startActivity(intent);
            }
        }
    });			
        ]]>
		</programlisting>
	</section>
	<section id="圆形按钮">
		<title>圆形按钮</title>
		<programlisting>
        <![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:shape="oval"
android:useLevel="false"
tools:ignore="ResourceName">
<solid android:color="#FFa500" />
</shape>			
        ]]>
		</programlisting>
		<programlisting>
        <![CDATA[
        <Button
            android:id="@+id/imeButton"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_gravity="right"
            android:background="@drawable/rond"
            android:text="+"
            android:textColor="#ffffff"
            android:textSize="50dp" />			
        ]]>
		</programlisting>
	</section>
	<section id="ImageButton">
		<title>ImageButton</title>
		<section>
			<title>触摸事件</title>
			<programlisting>
        <![CDATA[
    ImageButton imageButtonSpeak = findViewById(R.id.imageButtonSpeak);
    imageButtonSpeak.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent motionEvent) {
            System.out.println("图片按钮 touch 事件");

            int action = motionEvent.getAction();
            if (action == MotionEvent.ACTION_UP) {
                System.out.println("按下了图片按钮。");
            } else if (action == MotionEvent.ACTION_DOWN) {
                System.out.println("松开了图片按钮。");
            } else if (action == MotionEvent.ACTION_MOVE) {
                System.out.println("按下并移动了图片按钮。");
            }
            return false;
        }
    });		
        ]]>
			</programlisting>
		</section>
	</section>
</section>

<section id="Switch">
	<title>Switch</title>
	<programlisting>
	<![CDATA[
    <Switch
        android:id="@+id/switchWrite"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="8dp"
        android:layout_marginTop="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginBottom="8dp"
        android:text="NDEF Message write"
        android:textOff="NDEF Message write Off"
        android:textOn="NDEF Message write On"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/writeButton"
        app:layout_constraintHorizontal_bias="0.076"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/ndefWrite"
        app:layout_constraintVertical_bias="0.087" />	
	]]>
	</programlisting>
	<programlisting>
	<![CDATA[
		final Switch switchWrite = (Switch) findViewById(R.id.switchWrite);

        switchWrite.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                if(isChecked) {
                    status.setText(switchWrite.getTextOn().toString());
                } else {
                    status.setText(switchWrite.getTextOff().toString());
                }
            }
        });	
	]]>
	</programlisting>
	<programlisting>
	<![CDATA[
	if(switchWrite.isChecked()){

    }	
	]]>
	</programlisting>
</section>
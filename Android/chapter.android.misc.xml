<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="misc" ?>
	<title>杂项</title>
	<section id="thread.sleep">
		<title>Sleep</title>
		<programlisting>
		<![CDATA[
    try {

        Thread.sleep(10000);

    } catch (InterruptedException e) {

        Log.e("Location", e.getMessage());

    }		
		]]>
		</programlisting>
	</section>
	<section>
		<title>Caused by: java.net.UnknownServiceException: CLEARTEXT
			communication to 47.100.253.187 not permitted by network security
			policy
		</title>
		<para>在AndroidManifest.xml的文件的application节点中增加
			android:usesCleartextTraffic="true"
		</para>
		<screen>
			<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    
    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Ropeway"
        android:usesCleartextTraffic="true"
        tools:targetApi="31">
        <service
            android:name=".service.RopewayService"
            android:enabled="true"
            android:exported="true"></service>
        <service
            android:name=".service.BroadcastService"
            android:enabled="true"
            android:exported="true" />

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
    <meta-data
        android:name="apiUrl"
        android:value="http://47.100.25.18:8000" />
</manifest>
			]]>
		</screen>
	</section>
	<section id="Design-pattern">
		<title>设计模式</title>
		<section id="Singleton">
			<title>单例模式</title>
			<programlisting>
		<![CDATA[
package cn.netkiller.voice;

import android.media.MediaRecorder;
import android.os.Environment;
import android.util.Log;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Audio {

    private boolean isRecord = false;

    private MediaRecorder mediaRecorder;
    private String filename;

    private Audio() {

    }

    private static Audio instance;

    public synchronized static Audio getInstance() {
        if (instance == null)
            instance = new Audio();
        return instance;
    }

    public String getFilename() {
        return filename;
    }

    public void start() {

        if (mediaRecorder == null) {

            String path = Environment.getExternalStorageDirectory().getPath();
            String folder = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            String name = new SimpleDateFormat("hhmmss").format(new Date());
            new File(path, folder).mkdirs();

            filename = String.format("%s/%s/%s.3gp", path, folder, name);
            Log.e("Voice", "voice path " + filename);

            try {

                mediaRecorder = new MediaRecorder();
                mediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
                mediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.DEFAULT);
                mediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);
                mediaRecorder.setOutputFile(filename);
                mediaRecorder.prepare();
                mediaRecorder.start();

                isRecord = true;

            } catch (IOException ex) {
                ex.printStackTrace();

            }
        }

    }

    public void stop() {
        if (mediaRecorder != null && isRecord) {
            System.out.println("stopRecord");
            isRecord = false;
            mediaRecorder.stop();
            mediaRecorder.release();
            mediaRecorder = null;
        }
    }

}	
		]]>
			</programlisting>
		</section>
	</section>
	<section id="android.os">
		<title>Android OS 包</title>
		<section id="android.os.Process.myTid">
			<title>进程ID</title>
			<programlisting>
		<![CDATA[
android.os.Process.myTid()		
		]]>
			</programlisting>
		</section>
		<section>
			<title>handler</title>
			<programlisting>
		<![CDATA[
        handler.postDelayed(() -> {
        }, 1000);		
		]]>
			</programlisting>
		</section>
	</section>
	<section>
		<title>fastjson android</title>
		<screen>
		<![CDATA[
implementation 'com.alibaba:fastjson:2.0.20.android'
		]]>
		</screen>
		<section>
			<title>对象转字符串</title>
			<programlisting>
			<![CDATA[
String json = JSON.toJSONString(user); //序列化			
			]]>
			</programlisting>
		</section>
		<section>
			<title>JsonObject 转对象</title>
			<para>对象转JsonObject</para>
			<programlisting>
			<![CDATA[
User user =JSON.parseObject(json,User.class); //反序列化
JSONObject jsonObject=(JSONObject)JSON.toJSON(user);
jsonObject.getIntValue("id");
			]]>
			</programlisting>
			<para>jsonObject 转 Java Object</para>
			<programlisting>
			<![CDATA[
User user=JSON.toJavaObject(jsonObject, User.class);			
			]]>
			</programlisting>
		</section>
		<section>
			<title>字符串 与 json 互转</title>
			<para>json 转 字符串</para>
			<programlisting>
			<![CDATA[
String jsonString=JSON.toJSONString(jsonObject);			
			]]>
			</programlisting>
			<para>字符串 转 json</para>
			<programlisting>
			<![CDATA[
JSONObject jsonObject=JSON.parseObject(jsonString);
jsonObject.getString("name");
			]]>
			</programlisting>
		</section>
		<section>
			<title>json 转 数组</title>
			<programlisting>
			<![CDATA[
JSONArray jArray=JSON.parseArray(JSON.toJSONString(userList));
			]]>
			</programlisting>
		</section>
		<section>
			<title>JSON数组转List</title>
			<programlisting>
			<![CDATA[
List<Map> listMaps = JSONArray.parseArray(JSON.toJSONString(data),Map.class);
List<Map> mapsList = JSONObject.parseArray(JSON.toJSONString(data), Map.class);			
			]]>
			</programlisting>
		</section>
		<section>
			<title>Map 与 Json 互转</title>
			<para>Json 转 map</para>
			<programlisting>
			<![CDATA[
Map<String,Object> maps = JSONObject.parseObject(json2,Map.class);
			]]>
			</programlisting>
			<para>Map转JSON</para>
			<programlisting>
			<![CDATA[
JSONObject jsonObject = JSONObject.parseObject(JSON.toJSONString(maps));			
			]]>
			</programlisting>
		</section>

	</section>

	<section id="ButterKnife">
		<title>Butter Knife</title>
		<para>http://jakewharton.github.io/butterknife/</para>
	</section>
	<section id="things">
		<title>Android Things</title>
		<section>
			<title>GPIO</title>
			<para>配置权限</para>
			<screen>
		<![CDATA[
<uses-permission android:name="com.google.android.things.permission.USE_PERIPHERAL_IO" />
<uses-permission android:name="com.google.android.things.permission.MANAGE_INPUT_DRIVERS" />
		]]>
			</screen>
			<para></para>
			<programlisting>
		<![CDATA[
		
		]]>
			</programlisting>
		</section>
	</section>
</chapter>
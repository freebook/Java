<section id="layout">
	<title>样式布局</title>
	<section>
		<title>对齐布局</title>
		<para>垂直/水平剧中</para>
		<programlisting>
		<![CDATA[
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />		
		]]>
		</programlisting>
	</section>
	<section id="LinearLayout">
		<title>LinearLayout</title>
		<section>
			<title>外边距设置</title>
			<programlisting>
			<![CDATA[
    android:layout_marginLeft="10dp"
    android:layout_marginTop="10dp"
    android:layout_marginRight="10dp"
    android:layout_marginBottom="10dp"
			]]>
			</programlisting>
		</section>
		<section>
			<title>内边距设置</title>
			<programlisting>
			<![CDATA[
    android:padding="10dp"
			]]>
			</programlisting>
		</section>
		<section>
			<title>水平剧中</title>
			<para>android:gravity="center_horizontal"</para>
			<programlisting>
			<![CDATA[
            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:gravity="center_horizontal"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/textView"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="15dp"
                    android:text="唤醒词"
                    android:textColor="#70ffffff"
                    android:textSize="14sp" />

                <TextView
                    android:id="@+id/textView2"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="2dp"
                    android:text="小梅小梅"
                    android:textColor="#00F8C1"
                    android:textSize="24sp" />
            </LinearLayout>			
			]]>
			</programlisting>
		</section>

	</section>
	<section id="FrameLayout">
		<title>FrameLayout</title>

		<section>
			<title>在 Fragment 中使用 findViewById</title>
			<tip>
				<para>使用 getView() 方法返回当前 fragment 的根视图。</para>
				<programlisting>
				<![CDATA[
Button btn = getView().findViewById(R.id.btn);	
				]]>
				</programlisting>
			</tip>
		</section>
		<section>
			<title>在 Fragment 中使用 Intent 跳转</title>
			<programlisting>
			<![CDATA[
Intent intent = new Intent(getActivity(), MyService.class);
startActivity(intent);			
			]]>
			</programlisting>
		</section>
		<section>
			<title>Fragment 中调用 getPackageManager()</title>
			<programlisting>
			<![CDATA[
ResolveInfo resolveInfo = getActivity().getPackageManager().resolveActivity(intent, 0);			
			]]>
			</programlisting>
		</section>
		<section>
			<title>在 Fragment 中使用 runOnUiThread</title>
			<programlisting>
			<![CDATA[
    private void showResponse(final String response) {
        //在子线程中更新UI
        getActivity().runOnUiThread(new Runnable() {
            @Override
            public void run() {
                text_dashboard.setText(response);
            }
        });
    }
			]]>
			</programlisting>
		</section>


		<section>
			<title>FrameLayout 事件穿透</title>
			<para>FrameLayout 浮动在另其他 UI 上方，点击 FrameLayout 某些问之，触发了下面的事件，解决方法是增加:
			</para>
			<para>android:clickable="true"</para>
			<programlisting>
			<![CDATA[
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:RoundedCornerImageView="http://schemas.android.com/apk/res-auto"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/transparent"
    tools:ignore="MissingDefaultResource"
    android:clickable="true">			
			]]>
			</programlisting>
			<para>方法二</para>
			<programlisting>
			<![CDATA[
	mFrameLayout.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View v, MotionEvent event) {
            return true;
        }
    });			
			]]>
			</programlisting>
		</section>
		<section>
			<title>叠加层</title>
			<programlisting>
			<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:foregroundGravity="left|top"
    tools:context=".BlankFragment">

    <TextView
        android:layout_width="200dp"
        android:layout_height="200dp"
        android:background="@color/colorPrimary"
        android:gravity="bottom|right"
        android:text="第一层" />

    <TextView
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:background="@color/colorAccent"
        android:gravity="bottom|right"
        android:text="第二层" />

    <TextView
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:background="@color/colorPrimaryDark"
        android:gravity="bottom|right"
        android:text="第三层" />

</FrameLayout>			
			]]>
			</programlisting>
		</section>
		<section>
			<title>Fragment 中调用 findViewById</title>
			<programlisting>
			<![CDATA[
package cn.netkiller.album;

import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.fragment.app.Fragment;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link ClockFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class ClockFragment extends Fragment {
    private static final String TAG = ClockFragment.class.getSimpleName();
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public ClockFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment ClockFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static ClockFragment newInstance(String param1, String param2) {
        ClockFragment fragment = new ClockFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_clock, container, false);
        TextView textViewDate = view.findViewById(R.id.textViewDate);

        Handler handler = new Handler();
        handler.postDelayed(() -> {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("M月d日 EEEE", Locale.CHINESE);
            String date = simpleDateFormat.format(new Date());
            textViewDate.setText(date);
            Log.d(TAG, date);
        }, 30000);

        return view;
    }
}			
			]]>
			</programlisting>
		</section>
		<section>
			<title>替换 FrameLayout</title>
			<para>屏某个区域布局</para>
			<programlisting>
			<![CDATA[
    <FrameLayout
        android:id="@+id/controller"
        android:layout_width="409dp"
        android:layout_height="681dp"
        tools:layout_editor_absoluteX="1dp"
        tools:layout_editor_absoluteY="49dp"
        tools:ignore="MissingConstraints">

    </FrameLayout>			
			]]>
			</programlisting>
			<para>点击事件 android:onClick="hotelMenuClick"</para>
			<screen>
			<![CDATA[
		<androidx.cardview.widget.CardView
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:layout_weight="1"
             android:onClick="hotelMenuClick"
             app:cardCornerRadius="10dp"
             app:cardElevation="0dp">

             <ImageView
                 android:id="@+id/imageView4"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
                 android:scaleType="fitXY"
                 app:srcCompat="@drawable/bg_tavern_menu" />
         </androidx.cardview.widget.CardView>			
			]]>
			</screen>
			<para>事件响应</para>
			<programlisting>
			<![CDATA[
    public void hotelMenuClick(View v) {

        getSupportFragmentManager()
                .beginTransaction()
                .replace(R.id.controller, new HotelFragment(), null)
                .addToBackStack(null)
                .commit();

    }
			]]>
			</programlisting>
		</section>
	</section>

	<section id="AnimationDrawable">
		<title>动画</title>
		<para></para>
		<itemizedlist>
			<title>参数</title>
			<listitem>android:oneshot 代表播放次数 true 只展示一遍，设置为false会不停的循环播放动画
			</listitem>
			<listitem>android:duration 表示展示所用的该图片的时间长度 </listitem>
		</itemizedlist>
		<programlisting>
		<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<animation-list xmlns:android="http://schemas.android.com/apk/res/android"
    android:oneshot="true">

    <item
        android:drawable="@drawable/hotel1"
        android:duration="150" />
    <item
        android:drawable="@drawable/hotel2"
        android:duration="150" />
    <item
        android:drawable="@drawable/hotel3"
        android:duration="150" />
    <item
        android:drawable="@drawable/hotel4"
        android:duration="150" />
    <item
        android:drawable="@drawable/hotel5"
        android:duration="150" />
</animation-list>
		]]>
		</programlisting>
		<para></para>
		<programlisting>
		<![CDATA[
	<ImageView
    android:id="@+id/load_image"
    android:layout_width="25dp"
    android:layout_height="25dp"
    android:layout_gravity="center_vertical"
    android:scaleType="centerCrop"
    android:src="@drawable/loading_anim_image" />		
		]]>
		</programlisting>
		<para></para>
		<programlisting>
		<![CDATA[
    ImageView imageView = findViewById(R.id.imageView);
    animationDrawable = (AnimationDrawable) imageView.getDrawable();
    //直接就开始执行，性能不是最佳的。
    animationDrawable.start();		
		]]>
		</programlisting>
	</section>

	<section id="soundwave">
		<title>声音波形图</title>
		<programlisting>
		<![CDATA[
package cn.aigcsst.album.view;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.View;

public class SoundWaveView extends View {
    private Paint paint;
    private float[] amplitudes;

    public SoundWaveView(Context context) {
        super(context);
        init();
    }

    public SoundWaveView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    private void init() {
        paint = new Paint();
        paint.setColor(Color.BLUE);
        paint.setStrokeWidth(2);
    }

    public void setAmplitudes(float[] amplitudes) {
        this.amplitudes = amplitudes;
        invalidate(); // 刷新视图
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        if (amplitudes == null) {
            return;
        }

        int width = getWidth();
        int height = getHeight();
        int centerY = height / 2;

        for (int i = 0; i < amplitudes.length; i++) {
            float x = width * i / amplitudes.length;
            float y = centerY + amplitudes[i] * centerY;
            canvas.drawLine(x, centerY, x, y, paint);
        }
    }
}
		
		]]>
		</programlisting>
		<para></para>
		<programlisting>
		<![CDATA[
public class MainActivity extends AppCompatActivity {
    private SoundWaveView soundWaveView;
    private AudioRecord audioRecord;
    private boolean isRecording = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        soundWaveView = findViewById(R.id.sound_wave_view);
        int bufferSize = AudioRecord.getMinBufferSize(44100, AudioFormat.CHANNEL_IN_MONO, AudioFormat.ENCODING_PCM_16BIT);
        audioRecord = new AudioRecord(MediaRecorder.AudioSource.MIC, 44100, AudioFormat.CHANNEL_IN_MONO, AudioFormat.ENCODING_PCM_16BIT, bufferSize);

        startRecording();
    }

    private void startRecording() {
        isRecording = true;
        audioRecord.startRecording();

        new Thread(new Runnable() {
            @Override
            public void run() {
                short[] buffer = new short[1024];
                while (isRecording) {
                    int read = audioRecord.read(buffer, 0, buffer.length);
                    if (read > 0) {
                        float[] amplitudes = new float[read];
                        for (int i = 0; i < read; i++) {
                            amplitudes[i] = buffer[i] / 32768f; // 归一化为[-1, 1]
                        }
                        soundWaveView.setAmplitudes(amplitudes);
                    }
                }
                audioRecord.stop();
            }
        }).start();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        isRecording = false;
    }
}		
		]]>
		</programlisting>
		<para></para>
		<programlisting>
		<![CDATA[
<com.example.myapplication.SoundWaveView
    android:id="@+id/sound_wave_view"
    android:layout_width="match_parent"
    android:layout_height="match_parent" />		
		]]>
		</programlisting>
	</section>

</section>
<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="thread" ?>
	<title>Android 多线程</title>
	<section id="thread.sleep">
		<title>Sleep</title>
		<programlisting>
		<![CDATA[
    try {

        Thread.sleep(10000);

    } catch (InterruptedException e) {

        Log.e("Location", e.getMessage());

    }		
		]]>
		</programlisting>
	</section>
	<section>
		<title>GPIO</title>
		<para>配置权限</para>
		<screen>
		<![CDATA[
    new Thread("画画线程") {
         @Override
         public void run() {
             picture(question);
         }
     }.start();
     
     new Thread("GPT线程") {
         @Override
         public void run() {
             if (question != null) {
                 String sentence = cleaning();
                 chatgpt(sentence);
             }
         }
     }.start();
		]]>
		</screen>
		<para></para>
		<programlisting>
		<![CDATA[
// 步骤1：创建线程类，继承自Thread类
class MyThread extends Thread{

	// 步骤2：复写run（），内容 = 定义线程行为
    @Override
    public void run(){
    ... // 定义的线程行为
    }
}

// 步骤3：实例化线程类
MyThread mt=new MyThread(“线程名称”);

// 步骤4：通过线程对象控制线程的状态，如 运行、睡眠、挂起  / 停止
// start（）开启线程
mt.start();		
		]]>
		</programlisting>
	</section>
	<section id="android.queue">
		<title>消息队列</title>
		<section id="ConcurrentLinkedQueue">
			<title>非阻塞队列 ConcurrentLinkedQueue</title>
			<programlisting>
			<![CDATA[
 boolean	add(E e) 					将指定元素插入此队列的尾部。
 boolean	contains(Object o)          如果此队列包含指定元素，则返回 true。
 boolean	isEmpty() 		            如果此队列不包含任何元素，则返回 true。
 Iterator<E>	iterator()          返回在此队列元素上以恰当顺序进行迭代的迭代器。
 boolean	offer(E e)           	将指定元素插入此队列的尾部。
 E			peek()           		获取但不移除此队列的头；如果此队列为空，则返回 null。
 E			poll()           		获取并移除此队列的头，如果此队列为空，则返回 null。
 boolean	remove(Object o)        从队列中移除指定元素的单个实例（如果存在）。
 int		size()           		返回此队列中的元素数量。
 Object[]	toArray()           	返回以恰当顺序包含此队列所有元素的数组。
<T> T[] 	toArray(T[] a)          返回以恰当顺序包含此队列所有元素的数组；返回数组的运行时类型是指定数组的运行时类型。
			]]>
			</programlisting>
		</section>
	</section>
</chapter>

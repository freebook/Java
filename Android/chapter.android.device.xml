<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="device" ?>
	<title>设备</title>
	&section.android.environment.xml;
	&section.android.config.xml;
	<section>
		<title>设备信息</title>
		<para>设备 ID</para>
		<programlisting>
			<![CDATA[
String androidId = Settings.System.getString(getContentResolver(), "android_id");
this.androidId = Settings.System.getString(ContextHolder.getContext().getApplicationContext().getContentResolver(), Settings.Secure.ANDROID_ID);
private String android_id = Secure.getString(getContext().getContentResolver(), Secure.ANDROID_ID);
			]]>
		</programlisting>
	</section>
	<section>
		<title>Physical density</title>
		<programlisting>
		<![CDATA[
SystemProperties.getInt("qemu.sf.lcd_density", SystemProperties.getInt("ro.sf.lcd_density", DENSITY_DEFAULT));		
		]]>
		</programlisting>
	</section>
	&section.android.device.sound.xml;
	<section>
		<title>判断是平板，还是手机</title>
		<para>通过像素判断，不是太准确</para>
		<programlisting>
		<![CDATA[
        DisplayMetrics displayMetrics = getResources().getDisplayMetrics();
        int width = displayMetrics.widthPixels;
        int height = displayMetrics.heightPixels;
        Log.e(TAG, "width: " + width + ", height: " + height);
		]]>
		</programlisting>
		<para>通过电话类型判断</para>
		<programlisting>
		<![CDATA[
        TelephonyManager telephony = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        Log.d(TAG, "Phone type: " + telephony.getPhoneType());
        if (telephony.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) {
            Log.d(TAG, "这是平板");
        } else {
            Log.d(TAG, "这是手机");
        }
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[

		]]>
		</programlisting>
	</section>
	<section id="device.Bluetooth">
		<title>蓝牙设备管理</title>
		<section>
			<title>进入蓝牙设置界面</title>
			<programlisting>
			<![CDATA[
if (!bluetoothAdapter.isEnabled()) {
    Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
    startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
}			
			]]>
			</programlisting>
		</section>
		<section>
			<title>通过发送广播处理蓝牙</title>
			<programlisting>
			<![CDATA[
IntentFilter filter = new IntentFilter();
filter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);
filter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECT_REQUESTED);
registerReceiver(bluetoothReceiver, filter);			
			]]>
			</programlisting>
		</section>
		
		<section>
			<title>蓝牙禁用/启用</title>
			<programlisting>
			<![CDATA[
	public static void bluetoothManager() {

        if (ActivityCompat.checkSelfPermission(MainApplication.getContext(), Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (bluetoothAdapter != null) {
              bluetoothAdapter.disable();
        }
    }					
			]]>
			</programlisting>
			
		</section>
		<section>
			<title>获取蓝牙设备</title>
			<programlisting>
			<![CDATA[
		if (ActivityCompat.checkSelfPermission(MainApplication.getContext(), Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        BluetoothDevice device = bluetoothAdapter.getRemoteDevice(address);			
			]]>
			</programlisting>
		</section>
		<section>
			<title>查询已绑定设备</title>
			<programlisting>
			<![CDATA[
	public static void bluetoothManager() {

        if (ActivityCompat.checkSelfPermission(MainApplication.getContext(), Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
//            if (bluetoothAdapter != null) {
//                bluetoothAdapter.disable();
//            }
        if (bluetoothAdapter.isEnabled()) {
            Set<BluetoothDevice> bondedDevices = bluetoothAdapter.getBondedDevices();
            bondedDevices.forEach(bluetoothDevice -> {
                Log.d(TAG, "bluetoothManager " + bluetoothDevice.getName());
            });
        }

    }		
			]]>
			</programlisting>
		</section>
	</section>
</chapter>	
<?xml version="1.0" encoding="UTF-8"?>
<section id="android.containers">
	<title>Containers</title>
	<section id="CardView">
		<title>CardView</title>
		<section>
			<title>实现圆角 ImageView</title>
			<programlisting>
			<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <androidx.cardview.widget.CardView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:cardCornerRadius="10dp"
        app:cardElevation="0dp"
        tools:ignore="MissingConstraints">

        <ImageView
            android:id="@+id/imageView7"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:scaleType="fitXY"
            app:srcCompat="@drawable/bg_repast_menu" />
    </androidx.cardview.widget.CardView>
</androidx.constraintlayout.widget.ConstraintLayout>			
			]]>
			</programlisting>
		</section>
	</section>
	<section id="RecyclerView">
		<title>RecyclerView</title>
		<section>
			<title>滚动到最底部</title>
			<programlisting>
			<![CDATA[
        linearLayoutManager = new LinearLayoutManager(ContextHolder.getContext());
        linearLayoutManager.setStackFromEnd(true);
        recyclerView.setLayoutManager(linearLayoutManager);
        recyclerView.scrollToPosition(adapter.getItemCount() - 1);
			]]>
			</programlisting>
			<para>调用下面函数</para>
			<programlisting>
			<![CDATA[
recyclerView.smoothScrollToPosition(adapter.getItemCount() - 1);			
			]]>
			</programlisting>
			<para>其他用法</para>
			<programlisting>
			<![CDATA[
//                        linearLayoutManager.scrollToPositionWithOffset(adapter.getItemCount() - 1, Integer.MIN_VALUE);
//                        linearLayoutManager.scrollToPosition(adapter.getItemCount() - 1);
			]]>
			</programlisting>
		</section>
		<section>
			<title>ItemView 禁止自适应</title>
			<programlisting>
			<![CDATA[
        @NonNull
        @Override
        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
//            View view = View.inflate(MainApplication.getContext(), R.layout.recycler_view_chat, null); 这种方式，Item 不会100%充满屏幕
            View view = LayoutInflater.from(MainApplication.getContext()).inflate(R.layout.recycler_view_chat, parent, false);
            ViewHolder viewHolder = new ViewHolder(view);
            return viewHolder;
        }
			]]>
			</programlisting>
		</section>
		<section>
			<title>滚动条</title>
			<para>判断是否滑动到顶部/底部：</para>
			<programlisting>
			<![CDATA[
@Override
public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {
    if(newState == RecyclerView.SCROLL_STATE_IDLE){//停止滑动
        if(recyclerView.canScrollVertically(1)){
            Log.d(TAG, "滑动到顶部");
        }
        if(recyclerView.canScrollVertically(-1)){
            Log.d(TAG, "滑动到底部");
        }
    }
    super.onScrollStateChanged(recyclerView, newState);
}

recyclerView.canScrollVertically(1);  false表示不能往上滑动，即代表到顶部了；
recyclerView.canScrollVertically(-1); false表示不能往下滑动，即代表到底部了；
			]]>
			</programlisting>
			<para>判断滑动方向</para>
			<programlisting>
			<![CDATA[
@Override
public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
    if (dy > 0) {//下滑动作
    }

    if (dy < 0) {//上滑动作
    }
    super.onScrolled(recyclerView, dx, dy);
}

			]]>
			</programlisting>
			<para>保存滚动条位置</para>
			<programlisting>
			<![CDATA[
// Save state
Parcelable recyclerViewState = recyclerView.getLayoutManager().onSaveInstanceState();

// Todo

// Restore state
recyclerView.getLayoutManager().onRestoreInstanceState(recyclerViewState);
			]]>
			</programlisting>
		</section>
		<section>
			<title>子视图操作</title>
			<programlisting>
			<![CDATA[
    View view = binding.recyclerView.getChildAt(0);
    TextView textView = view.findViewById(R.id.textViewQuestion);
    textView.setText("Hello");			
			]]>
			</programlisting>
		</section>
	</section>
	<section id="BottomNavigationView">
		<title>底部导航</title>
		<para>只显示图标，不显示文字 app:labelVisibilityMode="unlabeled"</para>
		<programlisting>
		<![CDATA[
            <com.google.android.material.bottomnavigation.BottomNavigationView
                android:id="@+id/nav_view"
                android:layout_width="match_parent"
                android:layout_height="40dp"
                android:background="@android:color/system_neutral2_50"
                app:itemIconTint="@drawable/navigation_view"
                app:labelVisibilityMode="unlabeled"
                app:menu="@menu/bottom_nav_menu"
                tools:ignore="NewApi" />		
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[
.setLabelVisibilityMode(LabelVisibilityMode.LABEL_VISIBILITY_LABELED);
		]]>
		</programlisting>
		<para>图标不显示原始颜色</para>
		<programlisting>
		<![CDATA[
setItemIconTintList(null)		
		]]>
		</programlisting>
		<para>文字上下移动，app:itemPaddingBottom="15dp"，app:itemPaddingTop="0dp"</para>
		<programlisting>
		<![CDATA[
            <com.google.android.material.bottomnavigation.BottomNavigationView
                android:id="@+id/nav_view"
                android:layout_width="match_parent"
                android:layout_height="40dp"
                android:background="@android:color/system_neutral2_50"
                android:gravity="center"
                app:itemPaddingBottom="15dp"
                app:itemTextColor="@color/black"
                app:labelVisibilityMode="labeled"
                app:menu="@menu/bottom_nav_menu"
                tools:ignore="NewApi" />
		]]>
		</programlisting>
	</section>
	<section id="TabLayout">
		<title>TabLayout</title>
		<section>
			<title>xml 布局</title>
			<programlisting>
			<![CDATA[
		<com.google.android.material.tabs.TabLayout
                android:id="@+id/tabLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content">

                <com.google.android.material.tabs.TabItem
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="消息" />

                <com.google.android.material.tabs.TabItem
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="审核" />
                
            </com.google.android.material.tabs.TabLayout>
            
        <androidx.fragment.app.FragmentContainerView
            android:id="@+id/fragmentContainerViewTabItem"
            android:name="cn.aigcsst.student.ui.message.NotificationFullscreenFragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:fitsSystemWindows="true" />
			]]>
			</programlisting>
		</section>
		<section>
			<title>OnTabSelectedListener 事件</title>
			<programlisting>
			<![CDATA[
		binding.tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
            // 页面被选中
            @Override
            public void onTabSelected(TabLayout.Tab tab) {
                Log.d(TAG, "onTabSelected: " + tab.getText());
                Fragment fragment = null;
                switch (tab.getPosition()) {
                    // 这里我随便写了两个Fragment
                    case 0:
                        fragment = new NotificationFullscreenFragment();
                        break;
                    case 1:
                        fragment = new AuditFragment();
                        break;
                }

                if (fragment != null) {
                    getActivity().getSupportFragmentManager().beginTransaction().replace(R.id.fragmentContainerViewTabItem, fragment).commit();
                }
            }

            // 页面切换到其他
            @Override
            public void onTabUnselected(TabLayout.Tab tab) {
                Log.d(TAG, "onTabUnselected: " + tab.getText());
            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) {
                Log.d(TAG, "onTabReselected: " + tab.getText());
            }
        });
			]]>
			</programlisting>
		</section>
	</section>
</section>
<chapter id="android.faq">
	<title>FAQ</title>
	<section id="CLEARTEXT">
		<title>java.net.UnknownServiceException: CLEARTEXT communication to 192.168.0.185 not permitted by network security policy</title>
		<para>okhttp 默认使用 https 链接服务器，如果使用 http 会抛出现上面的异常</para>
		<screen>
		<![CDATA[
if (!Platform.get().isCleartextTrafficPermitted(host)) {
      throw new RouteException(new UnknownServiceException(
          "CLEARTEXT communication to " + host + " not permitted by network security policy"));
}		
		]]>
		</screen>
		<para>创建文件 res/xml/network_security_config.xml 内容如下</para>
		<screen>
		<![CDATA[
neo@MacBook-Pro ~/AndroidStudioProjects/okhttp % cat app/src/main/res/xml/network_security_config.xml 
<?xml version="1.0" encoding="utf-8"?>
<network-security-config>
    <base-config cleartextTrafficPermitted="true" />
</network-security-config>	
		]]>
		</screen>
		<para>再 app/src/main/AndroidManifest.xml 文件中增加 android:networkSecurityConfig="@xml/network_security_config"</para>
		<screen>
		<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.netkiller.okhttp">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:networkSecurityConfig="@xml/network_security_config">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

    <uses-permission android:name="android.permission.INTERNET" />
</manifest>		
		]]>
		</screen>
	</section>
	<section id="android.os.NetworkOnMainThreadException">
		<title>Caused by: android.os.NetworkOnMainThreadException</title>
		<para>主线程不能访问网络，在访问网络的代码前面添加如下代码即可：</para>
		<screen>
		<![CDATA[
StrictMode.ThreadPolicy policy= new StrictMode.ThreadPolicy.Builder().permitAll().build();
StrictMode.setThreadPolicy(policy);		
		]]>
		</screen>
		<para>或者写在 setContentView(R.layout.activity_main); 后面</para>
		<para>另一种方式是在线程中执行</para>
		<screen>
		<![CDATA[
       new Thread(new Runnable() {
            @Override
            public void run() {

                try {
                    String json = get("http://192.168.0.185:8080/member/json");
                } catch (IOException e) {
                    e.printStackTrace();
                }

            }
        }).start();		
		]]>
		</screen>
	</section>
	<section>
		<title>java.lang.IllegalStateException: Player is accessed on the wrong thread.</title>
		<programlisting>
		<![CDATA[
// 在 Service 中定义一个 Handler
private Handler mHandler = new Handler(Looper.getMainLooper());

// 在 Service 中定义一个 Runnable 对象
private Runnable mRunnable = new Runnable() {
    @Override
    public void run() {
        // 在这里执行与 UI 相关的操作
    }
};

// 在 Service 中使用 Handler 将 Runnable 对象发送到 UI 线程的消息队列中
mHandler.post(mRunnable);		
		]]>
		</programlisting>
	</section>
	<section>
		<title>Manifest merger failed with multiple errors, see logs</title>
		<para>通过 gradle processDebugManifest --stacktrace 定位问题</para>
		<screen>
		<![CDATA[
neo@MacBook-Pro-M2 album % gradle processDebugManifest --stacktrace

> Task :test:copyTask
copyTask

> Task :test:preBuild
preBuild

> Task :test:preDebugBuild
preDebugBuild

> Task :test:createDebugCompatibleScreenManifests
createDebugCompatibleScreenManifests

> Task :test:generateDebugResValues
generateDebugResValues

> Task :test:extractDeepLinksDebug
extractDeepLinksDebug

> Task :test:processDebugMainManifest
[androidx.vectordrawable:vectordrawable-animated:1.0.0] /Users/neo/.gradle/caches/transforms-3/4ea0058e0b06b5f932e694b630ab8fbf/transformed/vectordrawable-animated-1.0.0/AndroidManifest.xml Warning:
        Namespace 'androidx.vectordrawable' used in: androidx.vectordrawable:vectordrawable-animated:1.0.0, androidx.vectordrawable:vectordrawable:1.0.0.
processDebugMainManifest

> Task :test:processDebugManifest
processDebugManifest

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.4/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD SUCCESSFUL in 8s
26 actionable tasks: 24 executed, 2 up-to-date
neo@MacBook-Pro-M2 album % 
		
		]]>
		</screen>
	</section>
	<section>
		<title>android.os.NetworkOnMainThreadException</title>
		<para>网络连接会阻塞 UI，必须在线程中异步访问网络</para>
		<programlisting>
		<![CDATA[
		aigcSpeech.resetSpeech();
        aigcSpeech.Player().play(picture.audio, binding.progressBar);
        getActivity().runOnUiThread(() -> {
            binding.textView.setText(picture.story);
            new Thread(() -> {
                try {

                    InputStream inputStream = new URL(picture.image).openStream();
                    Drawable drawable = Drawable.createFromStream(inputStream, null);
                    binding.imageView.setImageDrawable(drawable);
                } catch (Exception e) {
                    Log.e(TAG, e.toString());
                    e.printStackTrace();
                }
            }).start();

         });		
		]]>
		</programlisting>
	</section>
	
	<section>
		<title>package does not have vibrate permission</title>
		<para>解决方案</para>
		<programlisting>
		<![CDATA[
    <uses-permission android:name="android.permission.VIBRATE" />
		]]>
		</programlisting>
	</section>
	
</chapter>